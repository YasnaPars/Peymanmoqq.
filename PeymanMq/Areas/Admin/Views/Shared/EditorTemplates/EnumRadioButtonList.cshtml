@using System.ComponentModel.DataAnnotations
@using System.Globalization

@model Enum

@{
    Func<Enum, string> getDescription = enumItem =>
    {
        var type = enumItem.GetType();
        var memInfo = type.GetMember(enumItem.ToString());

        if (memInfo != null && memInfo.Any())
        {
            var attrs = memInfo[0].GetCustomAttributes(typeof(DisplayAttribute), false);

            if (attrs != null && attrs.Any())
            {
                return ((DisplayAttribute)attrs[0]).GetName();
            }
        }

        return enumItem.ToString();
    };

    var listItems = Enum.GetValues(Model.GetType())
                        .OfType<Enum>()
                        .Select(enumItem =>
                                    new SelectListItem()
                                    {
                                        Text = getDescription(enumItem),
                                        Value = enumItem.ToString(),
                                        Selected = enumItem.Equals(Model)
                                    });

    string prefix = ViewData.TemplateInfo.HtmlFieldPrefix;
    ViewData.TemplateInfo.HtmlFieldPrefix = string.Empty;
    int index = 0;

    foreach (var li in listItems)
    {
        string fieldName = string.Format(CultureInfo.InvariantCulture, "{0}_{1}", prefix, index++);
        <div class="radio-inline">
            @Html.RadioButton(prefix, li.Value, li.Selected, new { @id = fieldName, @class = "icheck" })
            @Html.Label(fieldName, li.Text)
        </div>
    }

    ViewData.TemplateInfo.HtmlFieldPrefix = prefix;
}